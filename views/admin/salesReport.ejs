<%- include('../partials/adminPartials/adminHeader.ejs') %>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Sales Report</h2>
            </div>
        <div>
            <button href="#" class="btn btn-light rounded font-md" onclick="generateExcel()">Excel</button>
            <button class="btn btn-light rounded font-md" onclick="generatePDF()">PDF Download</button>
        </div>
        </div>
        <header class="card-header">
            <div class="row gx-3 align-items-center">
                <div class="col-lg-6 col-md-6">
                    <form action="/admin/salesReport">
                        <div class="row gx-3">
                            <div class="col-lg-4 col-md-4">
                                <select class="form-select" name="sortData">
                                    <option value="date" <%=sortData==='date' ? 'selected' : '' %>>Date</option>
                                    <option value="totalAmount" <%=sortData==='totalAmount' ? 'selected' : '' %>>Amount</option>
                                </select>
                            </div>
                            <div class="col-lg-6 col-md-6">
                                <select class="form-select" name="sortOrder">
                                    <option <%=sortOrder==='Ascending' ? 'selected' : '' %>>Ascending</option>
                                    <option <%=sortOrder==='Descending' ? 'selected' : '' %>>Descending</option>
                                </select>
                            </div>
                            <div class="col-md-12 mt-3">
                                <button class="btn btn-primary">Sort</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="col-lg-4 col-md-4">
                    <form action="/admin/salesReport" id="salesReportForm">
                        <div class="row gx-3">
                            <div class="col-md-6">
                                <label for="fromDate" class="form-label">From Date:</label>
                                <input type="date" class="form-control" id="fromDate" name="from" value="<%= from %>">
                            </div>
                            <div class="col-md-6">
                                <label for="toDate" class="form-label">To Date:</label>
                                <input type="date" class="form-control" id="toDate" name="to" value="<%= to %>">
                            </div>
                            <div class="col-md-12 mt-2">
                                <button class="btn btn-primary" type="submit">Filter</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </header>


            <!-- card-header end// -->
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th scope="col">OrderId</th>
                                <th scope="col">Date</th>
                                <th scope="col">Total</th>
                                <th scope="col">Payment Method</th>
                                <th scope="col">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order=> { %>
                                <tr>
                                    <td>
                                        <%=order._id %>
                                    </td>
                                    <td>
                                        <%=order.date.toISOString().substring(0,10) %>
                                    </td>
                                    <td>&#8377;<%=order.totalAmount %>
                                    </td>
                                    <td>
                                        <%=order.paymentMethod %>
                                    </td>
                                    <td><%=order.status %></td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
                <!-- table-responsive //end -->
            </div>
            <!-- card-body end// -->
        </div>
        <!-- card end// -->
        <!-- <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <li class="page-item active"><a class="page-link" href="#">01</a></li>
                    <li class="page-item"><a class="page-link" href="#">02</a></li>
                    <li class="page-item"><a class="page-link" href="#">03</a></li>
                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                    <li class="page-item"><a class="page-link" href="#">16</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a>
                    </li>
                </ul>
            </nav>
        </div> -->
    </section>

    <script>

        // date validation

        const salesReportForm = document.getElementById('salesReportForm');
        const fromDateInput = document.getElementById('fromDate');
        const toDateInput = document.getElementById('toDate');

        salesReportForm.addEventListener('submit',(event)=>{
            const fromDate = new Date(fromDateInput.value);
            const toDate = new Date(toDateInput.value);
            const today = new Date();

            if(fromDate > today){
                event.preventDefault();
                toastr.error('From date cannot be greater than today date');
                return;
            }
            if (toDate > today) {
                event.preventDefault();
                toastr.error('To date cannot be greater than today date');
                return;
            }
            if (fromDate > toDate) {
                event.preventDefault();
                toastr.error('From date cannot be greater than To date.');
                return;
            }
        })

        // pdf 
        function generatePDF() {
                const orders = document.querySelectorAll('.table tbody tr');

                const orderRows = [];
                orders.forEach(order => {
                    const orderId = order.cells[0].innerText;
                    const date = order.cells[1].innerText;
                    const total = order.cells[2].innerText;
                    const paymentMethod = order.cells[3].innerText;
                    const status = order.cells[4].innerText;

                    orderRows.push([orderId, date, total, paymentMethod, status]);
                });

                const pdfFormat = {
                    content: [
                        { text: 'Sales Report', style: 'header' },
                        {
                            table: {
                                headerRows: 1,
                                widths: [170, 70, 60, 45, 50, 50, 50],
                                body: [['OrderId', 'Date', 'Total', 'Payment Method', 'Status'], ...orderRows]
                            }
                        }
                    ],
                    styles: {
                        header: {
                            fontSize: 20,
                            bold: true,
                            alignment: 'center',
                            margin: [0, 0, 0, 10]
                        }
                    }
                };

                pdfMake.createPdf(pdfFormat).print();
            }
             function generateExcel() {
                    const orders = document.querySelectorAll('.table tbody tr');

                    const orderData = [];
                    orders.forEach(order => {
                     const orderId = order.cells[0].innerText;
                     const date = order.cells[1].innerText;
                     const total = order.cells[2].innerText;
                     const paymentMethod = order.cells[3].innerText;
                     const status = order.cells[4].innerText;

                     orderData.push([orderId, date, total, paymentMethod, status]);
                 });


                    const header = ['OrderId', 'Date', 'Total', 'Payment Method', 'Status'] ;
                    const data = [header, ...orderData];

                    const ws = XLSX.utils.aoa_to_sheet(data);
                    const wb = XLSX.utils.book_new();
                    XLSX.utils.book_append_sheet(wb, ws, 'Sales Report');

                    // Generating filename based on the current date and time
                    const filename = 'Sales_Report_' + new Date().toISOString().slice(0, 19).replace(/:/g, '-') + '.xlsx';

                    // Convert the workbook to a binary Excel file and trigger the download
                    XLSX.writeFile(wb, filename);
                }
    </script>
    <%- include('../partials/adminPartials/adminFooter.ejs') %>